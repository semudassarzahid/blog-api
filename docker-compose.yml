version: '3'

services:
  blog_api:
    build: ./deployment/
    container_name: blog_api
    ports:
      - "3300:3300"
      - "9230:9230"
    command: sh -c "/bin/bash"
    volumes:
      - ./:/var/www/html/
      - ./var/bash_history.log:/root/.bash_history
      - ./var:/var/log/
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      static-network:
        ipv4_address: 172.20.128.3
    tty: true

  nginx:
    image: tutum/nginx
    container_name: nginx
    ports:
      - "127.0.0.1:80:80"
    volumes:
      - ./deployment/nginx.conf:/etc/nginx/sites-enabled/blog_api.conf
      - ./deployment/nginx.conf:/etc/nginx/sites-available/blog_api.conf
      - ./var/log:/var/log/nginx
      - ./:/var/www/html/
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      static-network:
        ipv4_address: 172.20.128.1

  postgres:
    image: postgres:13
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: blog-api
    ports:
      - "5433:5432"
    volumes:
      - ../postgres-data:/var/lib/postgresql/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      static-network:
        ipv4_address: 172.20.128.32

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.0
    volumes:
      - ./deployment/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - elasticsearch:/usr/share/elasticsearch/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      # We defined Java heap space using ES_JAVA_OPTS environment variable. Max = 8GB and Minimum = 2GB
      # Note: Elasticsearch Cluster requires significant amount of heap memory.
      ES_JAVA_OPTS: "-Xmx8g -Xms2g"
      ELASTIC_PASSWORD: changeme
      # Use single-node discovery type to avoid boostrap checks on ES startup
      discovery.type: single-node
      # Publish host force to 'elk' network overlay
      network.publish_host: _eth0_
    networks:
      static-network:
        ipv4_address: 172.20.128.43

#  logstash:
#    image: docker.elastic.co/logstash/logstash:7.15.0
#    volumes:
#      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,z
#      - ./logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro,z
#      # - ./logstash/pipeline/gelf:/usr/share/logstash/pipeline/gelf:ro,z
#      # - ./logstash/pipeline/beats:/usr/share/logstash/pipeline/beats:ro,z
#      - /etc/timezone:/etc/timezone:ro
#      - /etc/localtime:/etc/localtime:ro
#    ports:
#      - "5044:5044"
#      - "5000:5000/tcp"
#      - "5000:5000/udp"
#      - "9600:9600"
#      - "12201:12201"
#    environment:
#      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
#    networks:
#      - elk
#      - logging-net
#    depends_on:
#      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:7.15.0
    volumes:
      - ./deployment/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "7601:5601"
    networks:
      static-network:
        ipv4_address: 172.20.128.42
    depends_on:
      - elasticsearch

networks:
  static-network:
    ipam:
      config:
        - subnet: 172.20.0.0/16
          ip_range: 172.28.0.0/24

volumes:
  elasticsearch: