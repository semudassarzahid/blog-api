{
	"info": {
		"_postman_id": "04a827ba-5117-4ee6-9418-57a11a06d7da",
		"name": "Blog-API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9565425"
	},
	"item": [
		{
			"name": "Register(Rest)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData);",
							"    pm.environment.set(\"email\", jsonData.user.email);",
							"    pm.environment.set(\"password\", \"Password@123\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"password\": \"Password@123\",\n    \"confirmPassword\": \"Password@123\",\n    \"role\": \"ADMIN\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/user/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"user",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register(GraphQL)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData);",
							"    pm.environment.set(\"email\", jsonData.data.register.user.email);",
							"    pm.environment.set(\"password\", \"Password@123\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Register($data: UserRegisterReqDto!){\n  register(data: $data){\n    status\n    message\n    user{\n      firstName\n      lastName\n      email\n      isActive\n      role\n    }\n  }\n}\n\n# query {\n#     Register($data: UserRegisterReqDto!) {\n#         register(data: $data){\n#             status\n#             message\n#             user {\n#                 firstName\n#                 lastName\n#                 email\n#             }\n#         }\n#     }\n# }",
						"variables": "{\n    \"data\": {\n        \"firstName\": \"{{$randomFirstName}}\",\n        \"lastName\": \"{{$randomLastName}}\",\n        \"email\": \"{{$randomEmail}}\",\n        \"password\":\"Password@123\",\n        \"confirmPassword\":\"Password@123\",\n        \"role\": \"NORMAL_USER\"\n    }\n}"
					}
				},
				"url": {
					"raw": "http://localhost:3000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login(GraphQL)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData.data);",
							"    pm.environment.set(\"token\", jsonData.data.login.token);",
							"    //pm.expect(jsonData.value).to.eql(100);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Login($email: String!, $password: String!){\n  login(email: $email, password: $password) {\n  \ttoken\n    message\n    status\n  }\n}",
						"variables": "{\n  \"email\": \"{{email}}\",\n  \"password\": \"{{password}}\"\n}"
					}
				},
				"url": {
					"raw": "http://localhost:3000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User By ID (REST)",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/user/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"user",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User (GraphQL)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query getUser{\n  getUser {\n  \tuser {\n        firstName\n        lastName\n        email\n        isActive\n        role\n    }\n    message\n    status\n  }\n}\n\n# query {\n#     getUser{\n#         status\n#         message\n#         user{\n#             firstName\n#         }\n#     }\n# }",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Logged In Admin (GraphQL)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "{\n  getAdmin{\n    status\n    user{\n      firstName\n      email\n      role\n    }\n    message\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Logged In user (GraphQL)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "{\n  getAuthLoggedUser{\n    status\n    user{\n      firstName\n      email\n      role\n    }\n    message\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login Passport local strategy  (REST)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{email}}\",\n    \"password\": \"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/user/auth/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"user",
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Index (REST)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{email}}\",\n    \"password\": \"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/user/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"user",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Index (GraphQL)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "{\n  index\n}",
						"variables": "{\n    \"username\": \"{{email}}\",\n    \"password\": \"{{password}}\"\n}"
					}
				},
				"url": {
					"raw": "http://localhost:3000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "localLogin (GraphQL)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "# mutation localLogin($username: String!, $password: String!){\n#   localLogin(username: $username, password: $password){\n#     status\n#     message\n#     user{\n#       firstName\n#       lastName\n#       email\n#       role\n#     }\n#   }\n# }\n\nmutation {\n    localLogin(username: \"{{email}}\", password: \"{{password}}\"){\n        status\n        message\n        user{\n            firstName\n            lastName\n            email\n            role\n            password\n        }\n    }\n}\n",
						"variables": "{\n    \"username\": \"{{email}}\",\n    \"password\": \"{{password}}\"\n}"
					}
				},
				"url": {
					"raw": "http://localhost:3000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Post",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation createPost($createPostInput: CreatePostInput!){\n  createPost(createPostInput: $createPostInput)\n}",
						"variables": "{\n    \"createPostInput\": {\n      \"title\": \"post 1\",\n      \"description\": \"its a great post\"\n    }\n}"
					}
				},
				"url": {
					"raw": "http://localhost:3000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		}
	]
}